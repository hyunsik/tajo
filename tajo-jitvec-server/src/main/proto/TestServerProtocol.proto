/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// for C++
package tajo.test;
option cc_generic_services = true;

// for Java
option java_package = "org.apache.tajo.test";
option java_outer_classname = "TestServerProtocol";
option java_generic_services = true;
option java_generate_equals_and_hash = true;

import "CatalogProtos.proto";
import "ClientProtos.proto";
import "DataTypes.proto";
import "TajoIdProtos.proto";
import "Plan.proto";
import "PrimitiveProtos.proto";

///////////////////////////////////
// For Query Test Cases
///////////////////////////////////

message ExecuteSQLRequest {
  required SessionIdProto sessionId = 1;
  required string sql = 2;
}

message ExecuteSQLResponse {
  required StatusProto status = 1;
}

message StatusProto {
  required int32 code = 1;
  repeated string errorMessageParams = 2;
}

message RequestPlan {
  required SessionIdProto sessionId = 1;
  required string sql = 2;
}

message PlanResponse {
  required StatusProto status = 1;

  optional LogicalNodeTree plan = 2;
  repeated InputDesc inputs = 3;
}

message InputDesc {
  required string name = 1;
  required TableDescProto table = 2;
}


///////////////////////////////////
// For Rpc Test Messages
///////////////////////////////////

message EchoMessage {
  required string message = 1;
}

message SumRequest {
  required int32 x1 = 1;
  required int64 x2 = 2;
  required double x3 = 3;
  required float x4 = 4;
}

message SumResponse {
  required double result = 1;
}


///////////////////////////////////
// Protocol Service
///////////////////////////////////

service TestServerProtocolService {

  // For Session Management
  rpc createSession(CreateSessionRequest) returns (CreateSessionResponse);
  rpc removeSession(SessionIdProto) returns (BoolProto);

  // For Query Test Cases
  rpc executeSQL(ExecuteSQLRequest) returns (ExecuteSQLResponse);
  rpc requestPlan(RequestPlan) returns (PlanResponse);

  // For Rpc Test

  rpc sum (SumRequest) returns (SumResponse);
  rpc echo (EchoMessage) returns (EchoMessage);
  rpc getError (EchoMessage) returns (EchoMessage);
  rpc getNull (EchoMessage) returns (EchoMessage);
  rpc deley (EchoMessage) returns (EchoMessage);
}